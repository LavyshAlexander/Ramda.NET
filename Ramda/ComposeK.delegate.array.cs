// <autogenerated>
//   This file was generated by T4 code generator ComposeK.delegate.array.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Dynamic;
using System.Collections;
using System.Threading.Tasks;
using static Ramda.NET.Currying;
using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace Ramda.NET
{
	public static partial class R
	{	
		/// <summary>
		/// Returns the right-to-left Kleisli composition of the provided functions,each of which must return a value of a type supported by [`chain`](#chain).`R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.
		/// <para />
		/// sig: Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)
		/// </summary>
		/// <returns>Function</returns>
		public static dynamic ComposeK(params Delegate[] functions) {
			return Currying.ComposeK(functions);
		}

		/// <summary>
		/// Returns the right-to-left Kleisli composition of the provided functions,each of which must return a value of a type supported by [`chain`](#chain).`R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.
		/// <para />
		/// sig: Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)
		/// </summary>
		/// <returns>Function</returns>
		public static dynamic ComposeK(RamdaPlaceholder functions = null) {
			return Currying.ComposeK(functions);
		}
	}
}
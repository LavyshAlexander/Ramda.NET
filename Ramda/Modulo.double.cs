// <autogenerated>
//   This file was generated by T4 code generator Modulo.double.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Dynamic;
using System.Collections;
using System.Threading.Tasks;
using static Ramda.NET.Currying;
using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace Ramda.NET
{
	public static partial class R
	{	
		/// <summary>
		/// Divides the first parameter by the second and returns the remainder. Notethat this function preserves the JavaScript-style behavior for modulo. Formathematical modulo see `mathMod`.
		/// <para />
		/// sig: Number -> Number -> Number
		/// </summary>
		/// <param name="a">The value to the divide.</param>
		/// <param name="b">The pseudo-modulus</param>
		/// <returns>The result of `b % a`.</returns>
		/// <see cref="R.MathMod"/>
		public static dynamic Modulo(double a, double b) {
			return Currying.Modulo(a, b);
		}

		/// <summary>
		/// Divides the first parameter by the second and returns the remainder. Notethat this function preserves the JavaScript-style behavior for modulo. Formathematical modulo see `mathMod`.
		/// <para />
		/// sig: Number -> Number -> Number
		/// </summary>
		/// <param name="a">The value to the divide.</param>
		/// <param name="b">The pseudo-modulus</param>
		/// <returns>The result of `b % a`.</returns>
		/// <see cref="R.MathMod"/>
		public static dynamic Modulo(RamdaPlaceholder a, double b) {
			return Currying.Modulo(a, b);
		}

		/// <summary>
		/// Divides the first parameter by the second and returns the remainder. Notethat this function preserves the JavaScript-style behavior for modulo. Formathematical modulo see `mathMod`.
		/// <para />
		/// sig: Number -> Number -> Number
		/// </summary>
		/// <param name="a">The value to the divide.</param>
		/// <param name="b">The pseudo-modulus</param>
		/// <returns>The result of `b % a`.</returns>
		/// <see cref="R.MathMod"/>
		public static dynamic Modulo(double a, RamdaPlaceholder b = null) {
			return Currying.Modulo(a, b);
		}

		/// <summary>
		/// Divides the first parameter by the second and returns the remainder. Notethat this function preserves the JavaScript-style behavior for modulo. Formathematical modulo see `mathMod`.
		/// <para />
		/// sig: Number -> Number -> Number
		/// </summary>
		/// <param name="a">The value to the divide.</param>
		/// <param name="b">The pseudo-modulus</param>
		/// <returns>The result of `b % a`.</returns>
		/// <see cref="R.MathMod"/>
		public static dynamic Modulo(RamdaPlaceholder a = null, RamdaPlaceholder b = null) {
			return Currying.Modulo(a, b);
		}
	}
}
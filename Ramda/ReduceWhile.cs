// <autogenerated>
//   This file was generated by T4 code generator ReduceWhile.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace Ramda.NET
{
	public static partial class R
	{	
		public static dynamic ReduceWhile<TSource, TAccmulator>(Func<TAccmulator, TSource, bool> pred, Func<TAccmulator, TSource, bool> fn, TAccmulator acc, IList<TSource> list) {
			return Currying.ReduceWhile(new DelegateDecorator(pred), new DelegateDecorator(fn), acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(RamdaPlaceholder pred, Func<TAccmulator, TSource, bool> fn, TAccmulator acc, IList<TSource> list) {
			return Currying.ReduceWhile(pred, new DelegateDecorator(fn), acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(Func<TAccmulator, TSource, bool> pred, RamdaPlaceholder fn, TAccmulator acc, IList<TSource> list) {
			return Currying.ReduceWhile(new DelegateDecorator(pred), fn, acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(Func<TAccmulator, TSource, bool> pred, Func<TAccmulator, TSource, bool> fn, RamdaPlaceholder acc, IList<TSource> list) {
			return Currying.ReduceWhile(new DelegateDecorator(pred), new DelegateDecorator(fn), acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(Func<TAccmulator, TSource, bool> pred, Func<TAccmulator, TSource, bool> fn, TAccmulator acc, RamdaPlaceholder list = null) {
			return Currying.ReduceWhile(new DelegateDecorator(pred), new DelegateDecorator(fn), acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(Func<TAccmulator, TSource, bool> pred, RamdaPlaceholder fn = null, RamdaPlaceholder acc = null, RamdaPlaceholder list = null) {
			return Currying.ReduceWhile(new DelegateDecorator(pred), fn, acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(Func<TAccmulator, TSource, bool> pred, Func<TAccmulator, TSource, bool> fn, RamdaPlaceholder acc = null, RamdaPlaceholder list = null) {
			return Currying.ReduceWhile(new DelegateDecorator(pred), new DelegateDecorator(fn), acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(RamdaPlaceholder pred, dynamic fn, TAccmulator acc, IList<TSource> list) {
			return Currying.ReduceWhile(pred, fn, acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(dynamic pred, RamdaPlaceholder fn, TAccmulator acc, IList<TSource> list) {
			return Currying.ReduceWhile(pred, fn, acc, list);
		}

		public static dynamic ReduceWhile<TSource>(dynamic pred, dynamic fn, RamdaPlaceholder acc, IList<TSource> list) {
			return Currying.ReduceWhile(pred, fn, acc, list);
		}

		public static dynamic ReduceWhile<TAccmulator>(dynamic pred, dynamic fn, TAccmulator acc, RamdaPlaceholder list = null) {
			return Currying.ReduceWhile(pred, fn, acc, list);
		}

		public static dynamic ReduceWhile(dynamic pred, RamdaPlaceholder fn = null, RamdaPlaceholder acc = null, RamdaPlaceholder list = null) {
			return Currying.ReduceWhile(pred, fn, acc, list);
		}

		public static dynamic ReduceWhile(dynamic pred, dynamic fn, RamdaPlaceholder acc = null, RamdaPlaceholder list = null) {
			return Currying.ReduceWhile(pred, fn, acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(dynamic pred, Func<TAccmulator, TSource, bool> fn, TAccmulator acc, IList<TSource> list) {
			return Currying.ReduceWhile(pred, fn, acc, list);
		}

		public static dynamic ReduceWhile<TSource, TAccmulator>(Func<TAccmulator, TSource, bool> pred, dynamic fn, TAccmulator acc, IList<TSource> list) {
			return Currying.ReduceWhile(pred, fn, acc, list);
		}

		public static dynamic ReduceWhile(RamdaPlaceholder pred = null, RamdaPlaceholder fn = null, RamdaPlaceholder acc = null, RamdaPlaceholder list = null) {
			return Currying.ReduceWhile(pred, fn, acc, list);
		}
	}
}
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{09D982F7-C08F-4E21-A668-DB9D2D41545D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Ramda.NET.Tests</RootNamespace>
    <AssemblyName>Ramda.NET.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="AbstractAnyOrAll.cs" />
    <Compile Include="AbstractAnyOrAllPass.cs" />
    <Compile Include="AbstractConstruct.cs" />
    <Compile Include="Add.cs" />
    <Compile Include="AddIndex.cs" />
    <Compile Include="Adjust.cs" />
    <Compile Include="AnyPass.cs" />
    <Compile Include="AllPass.cs" />
    <Compile Include="Any.cs" />
    <Compile Include="All.cs" />
    <Compile Include="Always.cs" />
    <Compile Include="And.cs" />
    <Compile Include="Ap.cs" />
    <Compile Include="Apply.cs" />
    <Compile Include="ApplySpec.cs" />
    <Compile Include="Assert.cs" />
    <Compile Include="Assoc.cs" />
    <Compile Include="AssocPath.cs" />
    <Compile Include="BaseFind.cs" />
    <Compile Include="BaseIndexOf.cs" />
    <Compile Include="Binary.cs" />
    <Compile Include="Bind.cs" />
    <Compile Include="Both.cs" />
    <Compile Include="Call.cs" />
    <Compile Include="Chain.cs" />
    <Compile Include="Clamp.cs" />
    <Compile Include="Comparator.cs" />
    <Compile Include="Complement.cs" />
    <Compile Include="Compose.cs" />
    <Compile Include="ComposeK.cs" />
    <Compile Include="Concat.cs" />
    <Compile Include="Cond.cs" />
    <Compile Include="Construct.cs" />
    <Compile Include="ConstructN.cs" />
    <Compile Include="Contains.cs" />
    <Compile Include="Converge.cs" />
    <Compile Include="CountBy.cs" />
    <Compile Include="Curry.cs" />
    <Compile Include="CurryN.cs" />
    <Compile Include="Dec.cs" />
    <Compile Include="DefaultTo.cs" />
    <Compile Include="Difference.cs" />
    <Compile Include="DifferenceWith.cs" />
    <Compile Include="Dissoc.cs" />
    <Compile Include="DissocPath.cs" />
    <Compile Include="Divide.cs" />
    <Compile Include="Drop.cs" />
    <Compile Include="DropLast.cs" />
    <Compile Include="DropLastWhile.cs" />
    <Compile Include="DropRepeats.cs" />
    <Compile Include="DropRepeatsWith.cs" />
    <Compile Include="DropWhile.cs" />
    <Compile Include="Either.cs" />
    <Compile Include="Empty.cs" />
    <Compile Include="EqBy.cs" />
    <Compile Include="EqProps.cs" />
    <Compile Include="Equals.cs" />
    <Compile Include="Evolve.cs" />
    <Compile Include="Extensions.cs" />
    <Compile Include="Filter.cs" />
    <Compile Include="FindLastIndex.cs" />
    <Compile Include="FindIndex.cs" />
    <Compile Include="Find.cs" />
    <Compile Include="FindLast.cs" />
    <Compile Include="Flatten.cs" />
    <Compile Include="Flip.cs" />
    <Compile Include="ForEach.cs" />
    <Compile Include="FromPairs.cs" />
    <Compile Include="GroupWith.cs" />
    <Compile Include="GroupBy.cs" />
    <Compile Include="Gte.cs" />
    <Compile Include="Gt.cs" />
    <Compile Include="Has.cs" />
    <Compile Include="Head.cs" />
    <Compile Include="IMappable.cs" />
    <Compile Include="Identical.cs" />
    <Compile Include="Identity.cs" />
    <Compile Include="IfElse.cs" />
    <Compile Include="Inc.cs" />
    <Compile Include="IndexBy.cs" />
    <Compile Include="IndexOf.cs" />
    <Compile Include="Init.cs" />
    <Compile Include="Insert.cs" />
    <Compile Include="InsertAll.cs" />
    <Compile Include="IntersectionWith.cs" />
    <Compile Include="Intersection.cs" />
    <Compile Include="Intersperse.cs" />
    <Compile Include="Into.cs" />
    <Compile Include="InvertObj.cs" />
    <Compile Include="Invert.cs" />
    <Compile Include="Invoker.cs" />
    <Compile Include="Is.cs" />
    <Compile Include="IsArrayLike.cs" />
    <Compile Include="IsEmpty.cs" />
    <Compile Include="IsNil.cs" />
    <Compile Include="Join.cs" />
    <Compile Include="IAppable.cs" />
    <Compile Include="LiftN.cs" />
    <Compile Include="Lte.cs" />
    <Compile Include="Lt.cs" />
    <Compile Include="Map.cs" />
    <Compile Include="MapAccumRight.cs" />
    <Compile Include="MapAccum.cs" />
    <Compile Include="MapObjIndexed.cs" />
    <Compile Include="Match.cs" />
    <Compile Include="MathMod.cs" />
    <Compile Include="Max.cs" />
    <Compile Include="MaxBy.cs" />
    <Compile Include="Mean.cs" />
    <Compile Include="Median.cs" />
    <Compile Include="Nothing.cs" />
    <Compile Include="Maybe.cs" />
    <Compile Include="Just.cs" />
    <Compile Include="Juxt.cs" />
    <Compile Include="Keys.cs" />
    <Compile Include="Last.cs" />
    <Compile Include="LastIndexOf.cs" />
    <Compile Include="Length.cs" />
    <Compile Include="Lenses.cs" />
    <Compile Include="LensPath.cs" />
    <Compile Include="LensIndex.cs" />
    <Compile Include="LensProp.cs" />
    <Compile Include="Lift.cs" />
    <Compile Include="ListXf.cs" />
    <Compile Include="Clone.cs" />
    <Compile Include="T.cs" />
    <Compile Include="F.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Aperture.cs" />
    <Compile Include="Append.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Ramda.NET.csproj">
      <Project>{fcb36793-91a4-4854-8f8f-5921ba97613f}</Project>
      <Name>Ramda.NET</Name>
    </ProjectReference>
  </ItemGroup>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>